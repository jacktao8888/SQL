CREATE TABLE 表名(
        字段1 列类型 [属性] [索引],
        字段2 列类型 [属性] [索引],
        ...
) [表类型];

#列类型
1、数值型： 
        整形：
            非常小的整形  1字节   TINYINT   SIGNED/UNSIGNED
            较小的整形    2字节   SMALLINT  SIGNED/UNSIGNED
            中等大小整形  3字节   MEDIUMINT SIGNED/UNSIGNED
            标准的整形    4字节   INT       SIGNED/UNSIGNED
            大的整形      8字节   BIGINT    SIGNED/UNSIGNED
      浮点型：
            float(M,D)    4字节     M：位数 D:小数精度  
            double(M,D)   8字节     
      定点数：
            decimal(M,D)    以字符形式存放
      注意：浮点型和定点数的区别，对浮点数来说，插入的数值的精度比规定的精度大时，会被四舍五入；
            对定点数来说，插入的数值的精度比规定的精度大时，会被保留。

2、字符型：
        char(n)            255个字符    固定长度        插入的字符长度超出n，会被截断
        varchar(n)         255个字符    可变长度        存储大小会随着插入的字符长度而改变<=n+1
        
        text    文本数据
        blob    二进制数据
        
        ENUM("a","b","c","d")   最多65535       且一次只能有一个值
        SET     集合            最多64          一次可以用集合中的多个值

3、日期型：
        DATE            YYYY-MM-DD或者YYYYMMDD（位数够就行）
        TIME            hh:mm:ss或者hhmmss
        DATETIME        YYYY-MM-DD hh:mm:ss
        TIMESTAMP       YYYYMMDDhhmmss
        YEAR            YYYY
        注意：创建表示最好不用这些时间格式（PHP中时间戳是一个从1970-1-1 00:00:00整数）
              最好用整数保存时间 time();

#数据字段属性：
  unsigned:
        只能用于数值型字段，数据范围扩大一倍 -128~127 ==> 0~255
  zerofill:
        用于数值型字段，加前导0
        该字段自动应用UNSIGNED
  AUTO_INCREMENT:
        只能是整数，数据每增加一条就会自动加一，字段的值不允许重复，要求可以同时设置为primary key
  null  默认值为空
  not null      默认非空

注意：在创建数据表时，每个字段都不要插入NULL，因为数据库的数据转为PHP数据时，整数型null转为0，字符型null转为''。

  default:
        设置缺省值

  例：
    CREATE TABLE tab1(
        id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(10) NOT NULL DEFAULT '',
        age INT UNSIGNED NOT NULL DEFAULT 0,
        height DOUBLE(3,2) DEFAULT 0.00
    );

#索引
  1、主键索引：
            防止创建重复的值
            唯一确定数据表里的一条特定数据记录的位置
            一张表里只能指定一个主键，主键的值不能为空 
            primary key
  2、唯一索引：            
            可以防止创建重复的值
            一个表可以有多个唯一索引
            unique
  3、常规索引：
            可以提高查找速度，但是减慢数据列上添加、删除、修改操作
            
      单独使用：create index 索引名 on 表名(列1，列2,...)；    在表的列1、2上创建索引
                drop index 索引名 on 表名；
            
                key和index意思完全一样，都是创建索引，如下：
      创建表时创建：
      例：
            create table tab2(
                id int,
                uid int,
                sid int,
                pid int,
                primary key(id),
                index ind1(uid),
                key key1(sid)
            );

  4、全文索引：
        fulltext,MyISAM表类型索引，只有在varchar,char,text文本字符串上使用
        
        create table books(
                id int,
                bookname varchar(20),
                price double,
                detail text,
                fulltext(bookname,detail),
                index indx(price),
                primary key(id)
        );
        
        select bookname,price from books where MATCH(detail) AGAINST('php');

#表类型
    查看MySQL支持的表类型       show engines;
    
    MySQL有12种存储引擎，主要学MyISAM、InnoDB，设置表类型如下：
        CREATE TABLE 表名() type InnoDB;
        CREATE TABLE 表名() engine InnoDB;
  1、MyISAM:
        OPTIMIZE TABLE 表名；      //优化数据表操作过程中产生的碎片
  2、InnoDB:
        支持MyISAM不支持的功能
        缺点占用空间大，速度慢

        功能      MyISAM      InnoDB
        事务处理  不支持       支持
        数据行锁定 不支持       支持
        外键约束    不支持     支持
        表空间占用   相对小     相对大，最大2倍
        全文索引    支持      不支持

#MySQL默认字符集
        查看MySQL支持的字符集   show character set;
        ACSII
        ISO-8859-1/latin1
        gb2312-80
        gb13000
        GBK             可以使用，1个汉字2个字节，定长字符集
        GB18030
        
        UTF-32
        USC-2
        UTF-16
        UTF-8           推荐使用，1-4个字节，可变长字符集

     例：
        create database 库名 default character set gbk collate gbk_chinese_ci;
        create table 表名() type=InnoDB default character set gbk collate gbk_chinese_ci;

##客户端与服务器交互时：
  character_set_client
  character_set_connection
  character_set_result
  
  set names 字符集；        同时修改以上三个值
  如：set names gbk;
  
  use 库名；
  alter database character set utf8;
  
  alter table 表名 character set utf8;
  
#备份数据库中的表
  在cmd命令行中，
        mysqldump -u root -p --default-character-set=utf8 -d 库名 > D:\\wamp\www\123.sql

#修改表结构
        ？ alter table           查看修改表结构的用法
        alter table 旧表名 rename as 新表名；          修改表名
        alter table 表名 add name varchar(10) not null;
        alter table 表名 add age int not null default 0 after name;
        alter table 表名 change 旧字段名 新字段名 新字段类型；
        
  
  
